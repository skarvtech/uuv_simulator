<launch>
  <!-- Remember to first launch Gazebo with a underwater world model
  Example:
  >> roslaunch uuv_description ocean_waves.launch
    or
  >> roslaunch uuv_description empty_underwater_world.launch

  The default joystick configuration is set for the XBox 360 controller
  -->
  <arg name="x" default="35"/>
  <arg name="y" default="-20"/>
  <arg name="z" default="-85"/>
  <arg name="yaw" default="3.0"/>
  <arg name="namespace" default="rexrov"/>

  <include file="$(find uuv_descriptions)/launch/upload_rexrov_oberon_arms.launch">
    <arg name="namespace" value="$(arg namespace)"/>
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="z" value="$(arg z)"/>
    <arg name="yaw" value="$(arg yaw)"/>
  </include>

  <include file="$(find uuv_thruster_manager)/launch/thruster_manager.launch">
    <arg name="uuv_name" value="$(arg namespace)" />
    <arg name="model_name" value="rexrov" />
  </include>

  <group ns="$(arg namespace)">
    <rosparam file="$(find uuv_control_cascaded_pid)/config/rexrov/inertial.yaml" command="load"/>
    <rosparam file="$(find uuv_control_cascaded_pid)/config/rexrov/vel_pid_control.yaml" command="load"/>

    <node pkg="uuv_control_cascaded_pid" type="AccelerationControl.py" name="acceleration_control"
            output="screen">
      <param name="tf_prefix" type="string" value="$(arg namespace)/" />
    </node>

    <node pkg="uuv_control_cascaded_pid" type="VelocityControl.py" name="velocity_control"
          output="screen">
      <remap from="odom" to="/$(arg namespace)/pose_gt"/>
      <remap from="cmd_accel" to="/$(arg namespace)/cmd_accel"/>
    </node>
  </group>

  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find uuv_gazebo)/rviz/rexrov_default.rviz"/>

</launch>
